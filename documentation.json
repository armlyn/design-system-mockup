{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-9f8e1d1d554caedb0c4474b5f3e8b9a3424e81ff56eab90ec1b9a58503bcbc75a0a0dd630fa61154a600448c66f4c31cb99262d8ef4280eb7c1fa2538d00334a",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"Redexos\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: \"app-root\",\n  imports: [RouterOutlet],\n  templateUrl: \"app.component.html\",\n  styles: [],\n})\nexport class AppComponent {\n  title = \"Redexos\";\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "    <h1>Welcome to {{ title }}!</h1>\n    <a routerLink=\"/report\">Reportar Especie</a>\n    <router-outlet />\n    "
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
            "file": "src/stories/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-cf9b20d0c6ffe301de50b3ee52d7ec54395c9e4945034ecf7f954575c60080cf8e3ab5a9a23ef8b6ff2b4a229644db3de5535082f2156f2351331e364a33ebf4",
            "file": "src/stories/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-card",
            "styleUrls": [
                "./card.css"
            ],
            "styles": [],
            "template": "<p-card header=\"Simple Card\">    <p class=\"m-0\">Lorem ipsum dolor sit amet...</p>\n  </p-card>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "CardModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CardModule } from \"primeng/card\";\n\n@Component({\n  selector: \"storybook-card\",\n  standalone: true,\n  imports: [CommonModule, CardModule],\n  template: `<p-card header=\"Simple Card\">\n    <p class=\"m-0\">Lorem ipsum dolor sit amet...</p>\n  </p-card>`,\n  styleUrls: [\"./card.css\"],\n})\nexport class CardComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./card.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "DialogComponent",
            "id": "component-DialogComponent-b9067993530659653df1ab0f28a78e4aa2dc564c6d758d6ab818c8241649e1d4cf0ba668a84571cf476995a8e061d656932ecbf96399e2bfc41bb9b165ea4b0f",
            "file": "src/stories/dialog/dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-dialog",
            "styleUrls": [
                "./dialog.css"
            ],
            "styles": [],
            "template": "<div class=\"dialog-container\" *ngIf=\"isOpen\">\n  <div class=\"dialog\">\n    <div class=\"dialog-header\">\n      <h2>{{ title }}</h2>\n      <button class=\"close-button\" (click)=\"close.emit()\">X</button>\n    </div>\n    <div class=\"dialog-content\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"dialog-footer\">\n      <button class=\"cancel-button\" (click)=\"cancel.emit()\">Cancel</button>\n      <button class=\"confirm-button\" (click)=\"confirm.emit()\">Confirm</button>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'Dialog Title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "cancel",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "EventEmitter"
                },
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter"
                },
                {
                    "name": "confirm",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'storybook-dialog',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"dialog-container\" *ngIf=\"isOpen\">\n      <div class=\"dialog\">\n        <div class=\"dialog-header\">\n          <h2>{{ title }}</h2>\n          <button class=\"close-button\" (click)=\"close.emit()\">X</button>\n        </div>\n        <div class=\"dialog-content\">\n          <ng-content></ng-content>\n        </div>\n        <div class=\"dialog-footer\">\n          <button class=\"cancel-button\" (click)=\"cancel.emit()\">Cancel</button>\n          <button class=\"confirm-button\" (click)=\"confirm.emit()\">Confirm</button>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./dialog.css'],\n})\nexport class DialogComponent {\n  @Input() isOpen = false;\n  @Input() title = 'Dialog Title';\n  @Output() close = new EventEmitter<void>();\n  @Output() cancel = new EventEmitter<void>();\n  @Output() confirm = new EventEmitter<void>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dialog.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "FormComponent",
            "id": "component-FormComponent-b06c6bf96759a6b8ba5df9fad7496b8dbc7000c913f5f110a6f8c3d05e9281d52b5807922396158b4c5bb30a40d1426edd1b30d799476fbeb3e4995e360c4d17",
            "file": "src/stories/form/form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-form",
            "styleUrls": [
                "./form.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "email",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter<{ name: string; email: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "InputTextModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                },
                {
                    "name": "CheckboxModule",
                    "type": "module"
                },
                {
                    "name": "CardModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { CheckboxModule } from \"primeng/checkbox\";\nimport { ButtonModule } from \"primeng/button\";\nimport { CardModule } from \"primeng/card\";\n\n@Component({\n  selector: \"storybook-form\",\n  standalone: true,\n  imports: [CommonModule,FormsModule, InputTextModule, ButtonModule, CheckboxModule, CardModule],\n  templateUrl: \"./form.component.html\",\n  styleUrls: [\"./form.css\"],\n})\nexport class FormComponent {\n  @Input() name = \"\";\n  @Input() email = \"\";\n\n  @Output() onSubmit = new EventEmitter<{ name: string; email: string }>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"surface-card p-4 shadow-2 border-round w-full lg:w-6\">\n    <div class=\"text-center mb-5\">\n        <!-- <img src=\"assets/images/blocks/logos/hyper.svg\" alt=\"Image\" height=\"50\" class=\"mb-3\"> -->\n        <div class=\"text-900 text-3xl font-medium mb-3\">Bienvenido</div>\n        <span class=\"text-600 font-medium line-height-3\">Aun no tienes una cuenta?</span>\n        <a class=\"font-medium no-underline ml-2 text-blue-500 cursor-pointer\">Crear ahora!</a>\n    </div>\n\n    <div>\n        <label for=\"email1\" class=\"block text-900 font-medium mb-2\">Correo</label>\n        <input id=\"email1\" type=\"text\" placeholder=\"Email address\" pInputText class=\"w-full mb-3\">\n\n        <label for=\"password1\" class=\"block text-900 font-medium mb-2\">Contraseña</label>\n        <input id=\"password1\" type=\"password\" placeholder=\"Password\" pInputText class=\"w-full mb-3\">\n\n        <div class=\"flex align-items-center justify-content-between mb-6\">\n            <div class=\"flex align-items-center\">\n                <p-checkbox id=\"rememberme1\" [binary]=\"true\" styleClass=\"mr-2\"></p-checkbox>\n                <label for=\"rememberme1\" class=\"text-900\">Recordar</label>\n            </div>\n            <a class=\"font-medium no-underline ml-2 text-blue-500 text-right cursor-pointer\">Olvidaste tu contraseña?</a>\n        </div>\n\n        <button pButton pRipple label=\"Sign In\" icon=\"pi pi-user\" class=\"w-full\"></button>\n    </div>\n</div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-980c9dd592cc83f20e7bb4916692dfc65df71e612efc2d72bdbc313537a7a58f2d8c0718d34cf7d4ce3c494f2ed652a1523476d79c24c7dd1d7494465b4a93e3",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button/button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "LeafletMapComponent",
            "id": "component-LeafletMapComponent-55c6905c57cc59b4c156f4d32e16c7e4473f0529ff4cfa664901a568b5bd3d010031777a6f73ae50f764a41f1673bc72b629d8a49a4094b19b90c53f8b63a5ba",
            "file": "src/stories/map/leafletmap.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-leaflet-map",
            "styleUrls": [
                "./leafletmap.css"
            ],
            "styles": [],
            "templateUrl": [
                "./leafletmap.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "initialZoom",
                    "defaultValue": "7",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "map",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "L.Map",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "markers",
                    "defaultValue": "[\n    L.marker([28.0, -15.5]).bindPopup(\"Islas Canarias\").openPopup(),\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "L.Marker[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "addMarkerWithCustomIcon",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "centerMap",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initMap",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, AfterViewInit } from \"@angular/core\";\nimport * as L from \"leaflet\";\n\n@Component({\n  selector: \"app-leaflet-map\",\n  templateUrl: \"./leafletmap.component.html\",\n  styleUrls: [\"./leafletmap.css\"],\n})\nexport class LeafletMapComponent implements OnInit, AfterViewInit {\n  private map!: L.Map;\n  private initialZoom: number = 7;\n  markers: L.Marker[] = [\n    L.marker([28.0, -15.5]).bindPopup(\"Islas Canarias\").openPopup(),\n  ];\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    this.initMap();\n    this.centerMap();\n    this.addMarkerWithCustomIcon();\n  }\n\n  private initMap() {\n    const baseMapURl = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n    this.map = L.map(\"map\").setView([28.0, -15.5], this.initialZoom);\n\n    L.tileLayer(baseMapURl).addTo(this.map);\n  }\n\n  private centerMap() {\n    // Create a boundary based on the markers\n    const bounds = L.latLngBounds(\n      this.markers.map((marker) => marker.getLatLng())\n    );\n\n    // Fit the map into the boundary\n    this.map.fitBounds(bounds);\n  }\n\n  private addMarkerWithCustomIcon() {\n    // Define el icono personalizado\n    const mapPinIcon = L.icon({\n      iconUrl: \"assets/images/map-pin.png\", // Ruta a tu icono personalizado\n      iconSize: [25, 25], // Tamaño del icono\n      iconAnchor: [12, 41], // Punto del icono que se colocará en la ubicación del marcador\n      popupAnchor: [1, -34], // Punto desde el que se abrirá el popup relativo al icono\n    });\n\n    // Crear un marcador con el icono personalizado\n    const marker = L.marker([28.0, -15.5], { icon: mapPinIcon })\n      .bindPopup(\n        `\n        <div>\n          <strong>Reporte</strong><br/>\n          Más información: <a href=\"https://www3.gobiernodecanarias.org/cptss/sostenibilidad/biodiversidad/redexos/app/guide/species/Cenchrus-setaceus\" target=\"_blank\">Cenchrus setaceus</a>\n        </div>\n      `\n      )\n      .openPopup();\n\n    this.markers.push(marker);\n    marker.addTo(this.map);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./leafletmap.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "extends": [],
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div id=\"map\" style=\"height: 500px;width: 100%;\"></div>"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-1c39dd163394bede35d26adae37def9693ead8e8112bf361ed2665ab21ace691c9ebed6ab071f5bd9066f96c23481ac12ee35832420c8dbdde5b3d33aeb00aae",
            "file": "src/stories/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-menu",
            "styleUrls": [
                "./menu.css"
            ],
            "styles": [],
            "template": "<div class=\"card flex justify-center\">\n  <p-menu [model]=\"items\" />\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[] | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MenuModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { MenuModule } from \"primeng/menu\";\n\n@Component({\n  selector: \"storybook-menu\",\n  standalone: true,\n  imports: [CommonModule, MenuModule],\n  template: `\n    <div class=\"card flex justify-center\">\n      <p-menu [model]=\"items\" />\n    </div>\n  `,\n  styleUrls: [\"./menu.css\"],\n})\nexport class MenuComponent {\n  items: MenuItem[] | undefined;\n\n  ngOnInit() {\n    this.items = [\n      { label: \"New\", icon: \"pi pi-plus\" },\n      { label: \"Search\", icon: \"pi pi-search\" },\n    ];\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./menu.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ModalComponent",
            "id": "component-ModalComponent-e0e17ef603deec71246db6665c519e7f96fa3dabe02106b43f27b5bc8a0e032a17c3789ce8c0783daa0c0f5b36bfdc936fe76e8ccad6057272dfc1d77207d15d",
            "file": "src/stories/modal/modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-modal",
            "styleUrls": [
                "./modal.css"
            ],
            "styles": [],
            "template": "<div class=\"modal-container\" *ngIf=\"isOpen\">\n  <div class=\"modal\">\n    <div class=\"modal-header\">\n      <h2>{{ title }}</h2>\n      <button class=\"close-button\" (click)=\"close.emit()\">X</button>\n    </div>\n    <div class=\"modal-content\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"modal-footer\">\n      <button class=\"cancel-button\" (click)=\"cancel.emit()\">Cancel</button>\n      <button class=\"confirm-button\" (click)=\"confirm.emit()\">Confirm</button>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'Modal Title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "cancel",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter"
                },
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                },
                {
                    "name": "confirm",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-modal',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"modal-container\" *ngIf=\"isOpen\">\n      <div class=\"modal\">\n        <div class=\"modal-header\">\n          <h2>{{ title }}</h2>\n          <button class=\"close-button\" (click)=\"close.emit()\">X</button>\n        </div>\n        <div class=\"modal-content\">\n          <ng-content></ng-content>\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"cancel-button\" (click)=\"cancel.emit()\">Cancel</button>\n          <button class=\"confirm-button\" (click)=\"confirm.emit()\">Confirm</button>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./modal.css'],\n})\nexport class ModalComponent {\n  @Input() isOpen = false;\n  @Input() title = 'Modal Title';\n  @Output() close = new EventEmitter<void>();\n  @Output() cancel = new EventEmitter<void>();\n  @Output() confirm = new EventEmitter<void>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./modal.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "NavigationComponent",
            "id": "component-NavigationComponent-2e504407ef539f4f0bd1c172030479a888be71f509dfe0fc3eda7994a970ab3703fbf315dc3a8a9f7e57872578e65efa7ee573a44b024fd8876f9f19683be8ac",
            "file": "src/stories/navigation/navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-navigation",
            "styleUrls": [
                "./navigation.css"
            ],
            "styles": [],
            "template": "<nav>\n  <ul>\n    <li *ngFor=\"let item of items\">\n      <a href=\"#\">{{ item }}</a>\n    </li>\n  </ul>\n</nav>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "items",
                    "defaultValue": "['Item 1', 'Item 2', 'Item 3']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'storybook-navigation',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <nav>\n      <ul>\n        <li *ngFor=\"let item of items\">\n          <a href=\"#\">{{ item }}</a>\n        </li>\n      </ul>\n    </nav>\n  `,\n  styleUrls: ['./navigation.css'],\n})\nexport class NavigationComponent {\n  @Input() items: string[] = ['Item 1', 'Item 2', 'Item 3'];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./navigation.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ReportFormComponent",
            "id": "component-ReportFormComponent-b1f7352d11aaa560f44be22cec80725f891480f826f7e1fe021719a17c681d5a4369c6bf31f025c1dfede18bb0277104399bece524cf29f5a85d37731363eb2e",
            "file": "src/app/src/app/components/report-form/report-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-formulario",
            "styleUrls": [
                "./report-form.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./report-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "municipios",
                    "defaultValue": "[\"Seleccionar\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "sistemasCoordenadas",
                    "defaultValue": "[\"Geográficas (EPSG:4326)\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "tiposContacto",
                    "defaultValue": "[\"Capturada\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "CalendarModule",
                    "type": "module"
                },
                {
                    "name": "DropdownModule",
                    "type": "module"
                },
                {
                    "name": "InputTextModule",
                    "type": "module"
                },
                {
                    "name": "TextareaModule",
                    "type": "module"
                },
                {
                    "name": "CheckboxModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from \"@angular/forms\";\n// Importa PrimeNG\nimport { CalendarModule } from \"primeng/calendar\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { TextareaModule } from \"primeng/textarea\";\nimport { CheckboxModule } from \"primeng/checkbox\";\nimport { ButtonModule } from \"primeng/button\";\n\n\n@Component({\n  selector: \"app-formulario\",\n  templateUrl: \"./report-form.component.html\",\n  styleUrls: [\"./report-form.component.css\"],\n    imports: [\n      ReactiveFormsModule,\n      CalendarModule,\n      DropdownModule,\n      InputTextModule,\n      TextareaModule,\n      CheckboxModule,\n      ButtonModule,\n    ],\n})\nexport class ReportFormComponent implements OnInit {\n  form: FormGroup;\n  sistemasCoordenadas = [\"Geográficas (EPSG:4326)\"];\n  municipios = [\"Seleccionar\"];\n  tiposContacto = [\"Capturada\"];\n\n  constructor(private fb: FormBuilder) {\n    this.form = this.fb.group({\n      fecha: [new Date(), Validators.required],\n      sistemaCoordenadas: [\"\", Validators.required],\n      latitud: [\"\", Validators.required],\n      longitud: [\"\", Validators.required],\n      municipio: [\"\", Validators.required],\n      lugar: [\"\", Validators.required],\n      cantidad: [1, Validators.required],\n      tipoContacto: [\"\", Validators.required],\n      descripcion: [\"\", Validators.required],\n      reportePrivado: [false],\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit(): void {\n    if (this.form.valid) {\n      console.log(\"Form Submitted!\", this.form.value);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./report-form.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"surface-card p-4 shadow-2 border-round w-full lg:w-6\">\n  <h3>Datos comunes</h3>\n  <form [formGroup]=\"form\">\n    <div class=\"p-field\">\n      <label for=\"fecha\">Fecha</label>\n      <p-calendar inputId=\"fecha\" formControlName=\"fecha\"></p-calendar>\n    </div>\n\n    <div class=\"p-field\">\n      <label for=\"sistemaCoordenadas\">Sistema de coordenadas</label>\n      <p-dropdown\n        inputId=\"sistemaCoordenadas\"\n        [options]=\"sistemasCoordenadas\"\n        formControlName=\"sistemaCoordenadas\"\n      ></p-dropdown>\n    </div>\n\n    <div class=\"p-field\">\n      <label for=\"latitud\">Latitud</label>\n      <input pInputText id=\"latitud\" formControlName=\"latitud\" />\n    </div>\n\n    <div class=\"p-field\">\n      <label for=\"longitud\">Longitud</label>\n      <input pInputText id=\"longitud\" formControlName=\"longitud\" />\n    </div>\n\n    <div class=\"p-field\">\n      <label for=\"municipio\">Municipio</label>\n      <p-dropdown\n        inputId=\"municipio\"\n        [options]=\"municipios\"\n        formControlName=\"municipio\"\n      ></p-dropdown>\n    </div>\n\n    <div class=\"p-field\">\n      <label for=\"lugar\">Lugar</label>\n      <input pInputText id=\"lugar\" formControlName=\"lugar\" />\n    </div>\n\n    <div class=\"p-field\">\n      <label for=\"cantidad\">Cantidad</label>\n      <input pInputText id=\"cantidad\" formControlName=\"cantidad\" />\n    </div>\n\n    <div class=\"p-field\">\n      <label for=\"tipoContacto\">Tipo de contacto</label>\n      <p-dropdown\n        inputId=\"tipoContacto\"\n        [options]=\"tiposContacto\"\n        formControlName=\"tipoContacto\"\n      ></p-dropdown>\n    </div>\n\n    <div class=\"p-field\">\n      <label for=\"descripcion\">Descripción</label>\n      <textarea\n        pInputTextarea\n        id=\"descripcion\"\n        formControlName=\"descripcion\"\n      ></textarea>\n    </div>\n\n    <div class=\"p-field-checkbox\">\n      <p-checkbox\n        inputId=\"reportePrivado\"\n        formControlName=\"reportePrivado\"\n        binary=\"true\"\n      ></p-checkbox>\n      <label for=\"reportePrivado\">Reporte privado</label>\n    </div>\n\n    <button pButton type=\"submit\" label=\"Enviar\"></button>\n  </form>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-8100de7dc2a0ad1ea6e6a29db691cd1f30ad2432662659e15f70f0d27f040605d0b29237c171628277d167101bf59be6020604fe578d444074cdf532dc7ac711",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, provideZoneChangeDetection } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport Aura from \"@primeng/themes/aura\";\n\n// Importa otros módulos necesarios, como FormsModule, ReactiveFormsModule, etc.\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { provideAnimationsAsync } from \"@angular/platform-browser/animations/async\";\nimport { providePrimeNG } from \"primeng/config\";\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideAnimationsAsync(),\n    providePrimeNG({\n      theme: {\n        preset: Aura,\n      },\n    }),\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-136333405890955e2f759c0ca89f57f6e1df366dd19081bd5c323306b50c880ccbf4f09e608ea71ea67d65ef9f3a8d0fa64c122b4c870f99887f38f6d967eca0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { provideRouter } from \"@angular/router\";\nimport { ReportFormComponent } from \"./src/app/components/report-form/report-form.component\";\n\n\nconst routes: Routes = [\n  { path: \"report\", component: ReportFormComponent },\n  { path: \"\", redirectTo: \"/report\", pathMatch: \"full\" }, // Ruta por defecto\n  { path: \"**\", redirectTo: \"/report\" },\n  // Otras rutas pueden ir aquí\n];\n\n@NgModule({\n  imports: [],\n  exports: [RouterModule],\n  providers: [provideRouter(routes)],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": [],
    "routes": [],
    "coverage": {
        "count": 6,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/src/app/components/report-form/report-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dialog/dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/map/leafletmap.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LeafletMapComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/modal/modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/navigation/navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}